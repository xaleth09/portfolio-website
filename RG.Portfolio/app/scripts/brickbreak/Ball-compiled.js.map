{"version":3,"sources":["Ball.js"],"names":[],"mappings":"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","file":"Ball-compiled.js","sourcesContent":["/**\n * Created by xaleth on 7/13/2016.\n */\nclass Ball extends DrawableObj{\n  constructor(config){\n    super();\n    this.speed = 3.75;\n\n    this.x = BB_canvas.width/2;\n    this.y = BB_canvas.height-30;\n\n    let negPos1 = Math.floor((Math.random() * 16) + 1); //randomizes whether ball will go left or right at start of game\n    this.dx = (negPos1%2 == 1)? this.speed:-this.speed;\n    this.dy = -this.speed;\n\n    this.ballAccel = .05\n\n    this.radius = 8;\n    this.height = this.radius; //used in quadTree insertion\n    this.width = this.radius;  //used in quadTree insertion\n\n    this.color = \"#0095DD\";\n    this.name = \"ball\";\n\n    Object.assign(this,config);\n  }\n\n  draw(){\n    BB_ctx.beginPath();\n    BB_ctx.arc(this.x, this.y, this.radius, 0, Math.PI*2);\n    BB_ctx.fillStyle = this.color;\n    BB_ctx.fill();\n    BB_ctx.closePath();\n  }\n\n  physics(){\n    //Ball physics\n\n    //ball hits side walls\n    if(this.x + this.dx > BB_canvas.width-this.radius || this.x + this.dx < this.radius) {\n      this.dx = -this.dx;\n    }\n    //ball hits top wall\n    if(this.y + this.dy < this.radius) {\n      this.dy = -this.dy;\n\n      //ball hits bottom wall\n    }else if(this.y + this.dy > BB_canvas.height-this.radius){\n      lose();\n    }\n\n    //Tests for collisions between \"close\" (as determined by quadtree) objects\n    //and this ball. objects returned are the bricks in the game board or the paddle\n    let collisionObjs = quadTree.retrieve(this);\n    for(let obj of collisionObjs){\n      if(obj.name == \"paddle\"){\n        if(this.y + this.dy > obj.y - this.radius && this.x > obj.x && this.x < obj.x + obj.width){\n          this.dy += this.ballAccel;\n          this.dx += this.ballAccel;\n          this.dy = -this.dy;\n        }\n\n      }else if(obj.name == \"brick\"){\n        if(this.x + this.dx > obj.x - this.radius && this.x + this.dx < obj.x + obj.width + this.radius && this.y + this.dy > obj.y - this.radius && this.y + this.dy < obj.y + obj.height + this.radius ){\n          obj.hit();\n          this.dy = -this.dy;\n        }\n      }\n    }\n\n    this.x += this.dx;\n    this.y += this.dy;\n  }\n\n}\n"]}